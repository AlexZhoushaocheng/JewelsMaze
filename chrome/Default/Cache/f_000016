{"version":3,"sources":["ItemModel.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\scripts\\game","sourcesContent":["import BoardView from './BoardView';\r\nimport ItemNodePool from './ItemNodePool';\r\nimport GameItem from './GameItem';\r\nimport EventRouter from '../common/EventRouter';\r\nimport Robot from '../Robot';\r\nimport Player from '../Player';\r\n\r\n//棋盘中的元素数据\r\n//type 类型\r\n//node 节点\r\nclass Data {\r\n    type: string //GameItem.ItemType\r\n    node: cc.Node\r\n    mask: number\r\n}\r\n\r\nclass PosPair {\r\n    posX: cc.Vec2\r\n    posY: cc.Vec2\r\n    constructor(pos1: cc.Vec2, pos2: cc.Vec2) {\r\n        this.posX = pos1\r\n        this.posY = pos2\r\n    }\r\n}\r\n\r\nenum ActionType {\r\n    UNDEFINE,\r\n    TRY_SWAP,\r\n    SWAP,\r\n    MOVE,\r\n    ERASE\r\n}\r\nconst MaxChairCount = 2\r\n\r\nexport default class ItemModel {\r\n\r\n    static EVENT = {\r\n        TRY_SWAP: \"TRY_SWAP\"\r\n    }\r\n\r\n    view: BoardView //棋盘\r\n    rowCount: number\r\n    colCount: number\r\n    itemNodePool: ItemNodePool\r\n    dataTable: Array<Array<Data>> = []\r\n    lastAction: ActionType = ActionType.UNDEFINE\r\n\r\n    isPlayerTurn: boolean = true\r\n\r\n    player: Player\r\n    robot: Player\r\n\r\n    //待消除元素\r\n    itemEraseMap: Map<string, cc.Vec2> = new Map<string, cc.Vec2>()\r\n\r\n    //待移动元素 \r\n    itemMoveMap: Map<string, cc.Vec2> = new Map<string, cc.Vec2>()\r\n\r\n    //移动完成后是否检查表，移动无效时进行恢复时无需检查\r\n    bSwapBack = false\r\n\r\n    //\r\n    swapTemp: cc.Vec2[] = []\r\n\r\n    //连续消除计数\r\n    continuousEraseCount: number = 0\r\n\r\n    //此次被消除元素的数量\r\n    eraseItemCount: number = 0\r\n\r\n    changeTurn() {\r\n        this.isPlayerTurn = !this.isPlayerTurn\r\n\r\n        if (!this.isPlayerTurn) {//机器人回合\r\n            console.log(\"robot trun\")\r\n            let pairs =  this.findErasable()\r\n            // TODO 找一个最优的，也就是结果中重复的次数最多的\r\n            if(pairs.length > 0 )\r\n            {\r\n                //随机取\r\n                let index = Math.round(pairs.length * Math.random())\r\n                console.log(\"robot Move\")\r\n                this.onTrySwap(pairs[index].posX,pairs[index].posY)\r\n            }else{\r\n                //没有可以移动消除的元素，重新初始化棋盘\r\n                console.log(\"没有可以移动后消除的选项\")\r\n            }\r\n        } else {//玩家回合\r\n            console.log(\"player trun\")\r\n            //TODO 提示玩家可以行动了\r\n        }\r\n    }\r\n\r\n    //执行消除，消除itemEraseMap中的元素\r\n    doErase() {\r\n        this.itemEraseMap.forEach((index: cc.Vec2, uuid: string) => {\r\n            this.eraseItemCount++\r\n            this.dataTable[index.x][index.y].node.emit(GameItem.EVENT.ERASE)\r\n\r\n            //model中清除\r\n            this.dataTable[index.x][index.y].type = GameItem.ItemType.Undefine.type\r\n            this.dataTable[index.x][index.y].mask = GameItem.ItemType.Undefine.mask\r\n            this.dataTable[index.x][index.y].node = null\r\n        })\r\n    }\r\n\r\n    //执行移动，移动itemMoveMap中的元素\r\n    doMove() {\r\n        //console.log(\"do move\")\r\n        this.itemMoveMap.forEach((index: cc.Vec2, uuid: string) => {\r\n            this.dataTable[index.x][index.y].node.emit(GameItem.EVENT.MOVE, this.view.getPosition(index.x, index.y))\r\n        })\r\n    }\r\n\r\n    //上\r\n    posUp(pos: cc.Vec2) { return pos.add(cc.v2(1, 0)) }\r\n\r\n    //左\r\n    posLeft(pos: cc.Vec2) { return pos.add(cc.v2(0, -1)) }\r\n\r\n    //右\r\n    posRight(pos: cc.Vec2) { return pos.add(cc.v2(0, 1)) }\r\n\r\n    //下\r\n    posDown(pos: cc.Vec2) { return pos.add(cc.v2(-1, 0)) }\r\n\r\n    //左上\r\n    posLU(pos: cc.Vec2) { return pos.add(cc.v2(1, -1)) }\r\n\r\n    //右上\r\n    posRU(pos: cc.Vec2) { return pos.add(cc.v2(1, 1)) }\r\n\r\n    //左下\r\n    posLD(pos: cc.Vec2) { return pos.add(cc.v2(-1, -1)) }\r\n\r\n    //右下\r\n    posRD(pos: cc.Vec2) { return pos.add(cc.v2(-1, 1)) }\r\n\r\n    findErasable(): Array<PosPair> {\r\n        let allRet: Array<PosPair> = []\r\n        //let sameTypeArr:Array<cc.Vec2> = []\r\n        for (let row = 0; row < this.rowCount; row++) {\r\n            for (let col = 0; col < this.colCount; col++) {  //12种情况\r\n                let posM = cc.v2(row, col)\r\n                /******** 1表示相同的类型，0表示随意类型 1\r\n                * 010\r\n                * 101\r\n                ********/\r\n                if (this.isSameType(posM, this.posLD(posM), this.posRD(posM))) {\r\n                    allRet.push(new PosPair(posM, this.posDown(posM)))\r\n                }\r\n\r\n                /******** 1表示相同的类型，0表示随意类型 2\r\n                * 101\r\n                * 010\r\n                ********/\r\n                if (this.isSameType(posM, this.posLU(posM), this.posRU(posM))) {\r\n                    allRet.push(new PosPair(posM, this.posUp(posM)))\r\n                }\r\n                /******** 1表示相同的类型，0表示随意类型 3\r\n                    * 010\r\n                    * 100\r\n                    * 010\r\n                    ********/\r\n                if (this.isSameType(posM, this.posRD(posM), this.posRU(posM))) {\r\n                    allRet.push(new PosPair(posM, this.posRight(posM)))\r\n                }\r\n                /******** 1表示相同的类型，0表示随意类型 4\r\n                    * 010\r\n                    * 001\r\n                    * 010\r\n                    ********/\r\n                if (this.isSameType(posM, this.posLU(posM), this.posLD(posM))) {\r\n                    allRet.push(new PosPair(posM, this.posLeft(posM)))\r\n                }\r\n                /******** 1表示相同的类型，0表示随意类型 5\r\n                    * 110\r\n                    * 001\r\n                    ********/\r\n                if (this.isSameType(posM, this.posLeft(posM), this.posRD(posM))) {\r\n                    allRet.push(new PosPair(this.posRD(posM), this.posRight(posM)))\r\n                }\r\n                /******** 1表示相同的类型，0表示随意类型 6\r\n                    * 001\r\n                    * 110\r\n                    ********/\r\n                if (this.isSameType(posM, this.posLeft(posM), this.posRU(posM))) {\r\n                    allRet.push(new PosPair(this.posRU(posM), this.posRight(posM)))\r\n                }\r\n\r\n                /******** 1表示相同的类型，0表示随意类型 7\r\n                    * 100\r\n                    * 011\r\n                    ********/\r\n                if (this.isSameType(posM, this.posRight(posM), this.posLU(posM))) {\r\n                    allRet.push(new PosPair(this.posLU(posM), this.posLeft(posM)))\r\n                }\r\n                /******** 1表示相同的类型，0表示随意类型 8\r\n                    * 011\r\n                    * 100\r\n                    ********/\r\n                if (this.isSameType(posM, this.posLD(posM), this.posRight(posM))) {\r\n                    allRet.push(new PosPair(this.posLD(posM), this.posLeft(posM)))\r\n                }\r\n                /******** 1表示相同的类型，0表示随意类型 9\r\n                    * 010\r\n                    * 010\r\n                    * 100\r\n                    ********/\r\n                if (this.isSameType(posM, this.posLD(posM), this.posUp(posM))) {\r\n                    allRet.push(new PosPair(this.posLD(posM), this.posDown(posM)))\r\n                }\r\n                /******** 1表示相同的类型，0表示随意类型 10\r\n                    * 010\r\n                    * 010\r\n                    * 001\r\n                    ********/\r\n                if (this.isSameType(posM, this.posRD(posM), this.posUp(posM))) {\r\n                    allRet.push(new PosPair(this.posRD(posM), this.posDown(posM)))\r\n                }\r\n                /******** 1表示相同的类型，0表示随意类型 11\r\n                    * 100\r\n                    * 010\r\n                    * 010\r\n                    ********/\r\n                if (this.isSameType(posM, this.posLU(posM), this.posDown(posM))) {\r\n                    allRet.push(new PosPair(this.posLU(posM), this.posUp(posM)))\r\n                }\r\n                /******** 1表示相同的类型，0表示随意类型 12\r\n                    * 001\r\n                    * 010\r\n                    * 010\r\n                    ********/\r\n                if (this.isSameType(posM, this.posDown(posM), this.posRU(posM))) {\r\n                    allRet.push(new PosPair(this.posRU(posM), this.posUp(posM)))\r\n                }\r\n            }\r\n        }\r\n        \r\n        return allRet\r\n    }\r\n\r\n    //\r\n    onOneMoveEnd(uuid: string) {\r\n        if (this.itemMoveMap.has(uuid)) {\r\n            this.itemMoveMap.delete(uuid)\r\n            if (this.itemMoveMap.size == 0) {\r\n                //所有移动完成\r\n                let erasableItems = this.checkAll()\r\n\r\n                if (erasableItems.length > 0) { //可以消除\r\n                    this.bSwapBack = false\r\n\r\n                    for (let item of erasableItems) {\r\n                        //UI中消除\r\n                        this.itemEraseMap.set(this.dataTable[item.x][item.y].node.uuid, item)\r\n                    }\r\n                    this.doErase()\r\n                } else if (this.bSwapBack) { //如果上次操作是尝试交换两个元素，那么\r\n                    this.bSwapBack = false\r\n                    this.swap(this.swapTemp[0], this.swapTemp[1])\r\n                } else { //判断是否让当前玩家继续行动\r\n                    if (this.continuousEraseCount >= 2 || this.eraseItemCount > 3) {\r\n                        //TODO 提示可以继续行动\r\n                        console.log(\"你可以继续行动\")\r\n                    } else {\r\n                        this.changeTurn()\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            console.error(\"the uuid is not in itemMoveMap,\", uuid)\r\n        }\r\n    }\r\n\r\n    //\r\n    onOneEraseEnd(uuid: string) {\r\n        if (this.itemEraseMap.has(uuid)) {\r\n            //被消除的元素记录到对应的玩家\r\n            let index: cc.Vec2 = this.itemEraseMap.get(uuid)\r\n            if (this.isPlayerTurn) {\r\n                this.player.items[this.dataTable[index.x][index.y].type] += 1\r\n            } else {\r\n                this.robot.items[this.dataTable[index.x][index.y].type] += 1\r\n            }\r\n\r\n            //TODO 跟新能量变化数据到客户端\r\n\r\n            this.itemEraseMap.delete(uuid)\r\n            if (this.itemEraseMap.size == 0) { //所有消除动作完成\r\n                this.fall()\r\n            }\r\n        }\r\n    }\r\n\r\n    //玩家行动后\r\n    onTrySwap(index1: cc.Vec2, index2: cc.Vec2) {\r\n        this.eraseItemCount = 0;\r\n\r\n        this.bSwapBack = true\r\n        this.swap(index1, index2)\r\n    }\r\n\r\n    constructor(view: BoardView) {\r\n        this.view = view\r\n\r\n        this.rowCount = 6\r\n        this.colCount = 7\r\n\r\n        this.itemNodePool = ItemNodePool.GetInstance()\r\n        this.player = new Player(this)\r\n        this.robot = new Player(this)\r\n    }\r\n\r\n\r\n    init() {\r\n        EventRouter.register(GameItem.EVENT.ERASE_END, this.onOneEraseEnd, this)\r\n        EventRouter.register(GameItem.EVENT.MOVE_END, this.onOneMoveEnd, this)\r\n        EventRouter.register(ItemModel.EVENT.TRY_SWAP, this.onTrySwap, this)\r\n\r\n        for (let i = 0; i < this.rowCount; i++) {\r\n            this.dataTable.push([])\r\n            for (let j = 0; j < this.colCount; j++) {\r\n                let exclude = this.getExclude(i, j)\r\n                let type = this._generateItem(exclude)\r\n                let node = this.itemNodePool.createItem(type)\r\n                this.dataTable[i].push(new Data())\r\n                this.dataTable[i][j].type = type\r\n                this.dataTable[i][j].node = node\r\n                this.dataTable[i][j].mask = GameItem.ItemType[type].mask\r\n            }\r\n        }\r\n        let erasable = this.checkAll()\r\n        if (erasable.length > 0) {\r\n            console.log(\"fuck !!!! ERROR!!! init done, check all: \", erasable)\r\n        }\r\n\r\n        this.isPlayerTurn = true;\r\n    }\r\n\r\n    //游戏开始\r\n    gameStart() {\r\n        if (this.isPlayerTurn) {\r\n            //TODO 提示玩家可以行动， 时钟开始计时\r\n        }\r\n    }\r\n\r\n    isValidIndex(index: cc.Vec2) {\r\n        return index.x >= 0 && index.x < this.rowCount && index.y >= 0 && index.y < this.colCount\r\n    }\r\n\r\n\r\n    //交换两个元素\r\n    private swap(index1: cc.Vec2, index2: cc.Vec2) {\r\n        this.swapTemp = []\r\n\r\n        if (this.isValidIndex(index1) && this.isValidIndex(index2)) {\r\n            let tempData = this.dataTable[index1.x][index1.y]\r\n            this.dataTable[index1.x][index1.y] = this.dataTable[index2.x][index2.y]\r\n            this.dataTable[index2.x][index2.y] = tempData\r\n\r\n            //使用动画在ui中交换位置\r\n            this.itemMoveMap.set(this.dataTable[index2.x][index2.y].node.uuid, index1)\r\n            this.itemMoveMap.set(this.dataTable[index1.x][index1.y].node.uuid, index2)\r\n            this.lastAction = ActionType.TRY_SWAP\r\n\r\n            this.swapTemp.push(index1, index2)\r\n            this.doMove()\r\n        }\r\n    }\r\n\r\n    //检测整个棋盘数据中的可消除项\r\n    private checkAll() {\r\n        let retArr: cc.Vec2[] = []\r\n        let tempArr: cc.Vec2[] = []\r\n\r\n        //横向检查\r\n        for (let row = 0; row < this.rowCount; row++) {\r\n            for (let col = 0; col < this.colCount; col++) {\r\n                if (tempArr.length > 0) {\r\n                    if (this.isSameType(cc.v2(row, col), tempArr)) { // 如果当前的元素类型和暂存队列所有元素的类型可消除，则将其加入暂存队列\r\n                        tempArr.push(cc.v2(row, col))\r\n                    } else { // 如果不同，则先判断暂存队列是否大于3个（即达到消除条件），达到则记录到结果队列中（retArr），\r\n\r\n                        //清空暂存\r\n                        if (tempArr.length >= 3) { //大于3可消除是可以清空暂存队列 TODO:如结尾时百搭元素应该检查后续元素和百搭元素组成的可消除长度，选择最长的可消除组合进行消除\r\n                            retArr = retArr.concat(tempArr)\r\n                            tempArr = []\r\n                        } else { // 如果不大于3，清空时应保留队尾的百搭元素 和 同类型元素\r\n                            let arr = tempArr\r\n                            tempArr = []\r\n                            for (let index = arr.length - 1; index >= 0; index--) {\r\n                                if (this.isSameType(cc.v2(row, col), cc.v2(arr[index].x, arr[index].y))) {\r\n                                    tempArr.push(arr[index])\r\n                                } else {\r\n                                    break\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        //清空后放入新元素\r\n                        tempArr.push(cc.v2(row, col))\r\n                    }\r\n                } else {\r\n                    tempArr.push(cc.v2(row, col))\r\n                }\r\n            } // 检测完一行\r\n\r\n            if (tempArr.length >= 3) {\r\n                retArr = retArr.concat(tempArr)\r\n            }\r\n            tempArr = []\r\n        }\r\n\r\n        //纵向检查\r\n        for (let col = 0; col < this.colCount; col++) {\r\n            for (let row = 0; row < this.rowCount; row++) {\r\n                if (tempArr.length > 0) {\r\n                    if (this.isSameType(cc.v2(row, col), tempArr)) { //如果当前的元素类型和暂存队列所有元素的类型可消除，则将其加入暂存队列\r\n                        tempArr.push(cc.v2(row, col))\r\n                    } else { //如果不同，则先判断暂存队列是否大于3个（即达到消除条件），达到则记录到结果队列中（retArr），\r\n                        //清空暂存\r\n                        if (tempArr.length >= 3) { //大于3可消除是可以清空暂存队列\r\n                            retArr = retArr.concat(tempArr)\r\n                            tempArr = []\r\n                        } else { // 如果不大于3，清空时应保留队尾的百搭元素\r\n                            let arr = tempArr\r\n                            tempArr = []\r\n                            for (let index = arr.length - 1; index >= 0; index--) {\r\n                                if (this.isSameType(cc.v2(row, col), cc.v2(arr[index].x, arr[index].y))) {\r\n                                    tempArr.push(arr[index])\r\n                                } else {\r\n                                    break\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        //清空后放入新元素\r\n                        tempArr.push(cc.v2(row, col))\r\n                    }\r\n                } else {\r\n                    tempArr.push(cc.v2(row, col))\r\n                }\r\n            } //检测完一列\r\n\r\n            if (tempArr.length >= 3) {\r\n                retArr = retArr.concat(tempArr)\r\n            }\r\n            tempArr = []\r\n        }\r\n        return this.distinct<cc.Vec2>(retArr, (v: cc.Vec2) => { return v.toString() })\r\n    }\r\n\r\n    private getEmptyIndex() {\r\n        let arr: cc.Vec2[] = []\r\n        for (let row = 0; row < this.dataTable.length; row++) {\r\n            for (let col = 0; col < this.dataTable[row].length; col++) {\r\n                if (this.dataTable[row][col].type == GameItem.ItemType.Undefine.type) {\r\n                    arr.push(cc.v2(row, col))\r\n                }\r\n            }\r\n        }\r\n\r\n        return arr\r\n    }\r\n\r\n    //使空白上方的元素落下\r\n    private fall() {\r\n        //this.printDataTable()\r\n        let emptyIndexs = this.getEmptyIndex()\r\n        let nodeMap: Map<number, Array<Data>> = new Map<number, Array<Data>>() //存放每列新增的对象\r\n        for (let index of emptyIndexs) {\r\n            let type = this._generateItem()\r\n            let data = new Data()\r\n            data.type = type\r\n            data.mask = GameItem.ItemType[type].mask\r\n            data.node = ItemNodePool.GetInstance().createItem(type)\r\n\r\n            if (nodeMap.has(index.y)) {\r\n                nodeMap.get(index.y).push(data)\r\n            } else {\r\n                nodeMap.set(index.y, new Array<Data>())\r\n                nodeMap.get(index.y).push(data)\r\n            }\r\n        }\r\n\r\n        let emptyCount = 0 //元素下方的空格子数\r\n        nodeMap.forEach((value: Data[], key: number) => {\r\n            let rowCount = this.dataTable.length\r\n\r\n            for (let row = 0; row < rowCount; row++) { //key 就是列索引\r\n                if (this.dataTable[row][key].type == GameItem.ItemType.Undefine.type) {\r\n                    emptyCount++\r\n                } else if (emptyCount > 0) {\r\n                    this.move(cc.v2(row, key), cc.v2(row - emptyCount, key))\r\n                }\r\n            }\r\n\r\n\r\n            let count = emptyCount\r\n\r\n            for (let data of value) { //value 是一列新增的元素\r\n\r\n                let from = cc.v2(rowCount + (emptyCount - (count)), key)\r\n                let to = cc.v2(rowCount - (count--), key)\r\n\r\n                //初始化位置\r\n                //data.node.setPosition()\r\n                if (!data.node) {\r\n                    console.log(\"BIG ERROR\")\r\n                }\r\n                //UI中位置移动 \r\n                this.put(data, from, to)\r\n            }\r\n            emptyCount = 0\r\n        })\r\n        //this.printDataTable()\r\n        this.doMove()\r\n    }\r\n\r\n    printDataTable() {\r\n        for (let row = this.dataTable.length - 1; row >= 0; row--) {\r\n            let types = []\r\n            for (let data of this.dataTable[row]) {\r\n                types.push(data.type)\r\n            }\r\n            console.log(types.join(\"\\t\"))\r\n        }\r\n    }\r\n\r\n    private put(itemData: Data, from: cc.Vec2, to: cc.Vec2) {\r\n\r\n\r\n        //console.log(\"put \", itemData.type,\"from \",from.toString(), \" to \", to.toString())\r\n        //model中数据移动\r\n        this.dataTable[to.x][to.y] = itemData\r\n\r\n        //添加到棋盘中\r\n        this.view.chessBoard.addChild(itemData.node)\r\n\r\n        //初始化位置\r\n        itemData.node.setPosition(this.view.getPosition(from.x, from.y))\r\n\r\n        //UI中位置移动,加入移动队列\r\n        this.itemMoveMap.set(itemData.node.uuid, to)\r\n    }\r\n\r\n    //移动节点 from是棋盘上未被消除的元素，to是消除了的空格\r\n    private move(from: cc.Vec2, to: cc.Vec2) {\r\n        // console.log(\"move from \", from.toString() ,\" to \", to.toString())\r\n        //model中数据移动\r\n        this.dataTable[to.x][to.y] = this.dataTable[from.x][from.y]\r\n\r\n        //UI中位置移动,加入移动队列\r\n        this.itemMoveMap.set(this.dataTable[to.x][to.y].node.uuid, to)\r\n    }\r\n\r\n    //去重 据说这个方法比set快 feature取元素的特征值，即唯一值。\r\n    distinct<T>(arr: T[], feature: (v: T) => string) {\r\n        let ret: T[] = []\r\n        let obj = {}\r\n\r\n        for (let node of arr) {\r\n\r\n            if (!obj[feature(node)]) {\r\n                ret.push(node)\r\n                obj[feature(node)] = 1\r\n            }\r\n        }\r\n        return ret\r\n    }\r\n\r\n    isSameType(index1: cc.Vec2, index2: cc.Vec2): boolean;\r\n    isSameType(index1: cc.Vec2, index2: cc.Vec2[]): boolean;\r\n    isSameType(index1: cc.Vec2, index2: cc.Vec2, index3: cc.Vec2): boolean;\r\n\r\n    isSameType(index1: cc.Vec2, index2: any, index3?: cc.Vec2): boolean {\r\n        let maskRet = this.dataTable[index1.x][index1.y].mask\r\n\r\n        if (index2 instanceof Array) {\r\n            for (let index of (index2 as Array<cc.Vec2>)) {\r\n                maskRet = maskRet & this.dataTable[index.x][index.y].mask\r\n                if (0 == maskRet) {\r\n                    break\r\n                }\r\n            }\r\n        } else if (!index3) {\r\n            let index = index2 as cc.Vec2\r\n            maskRet = maskRet & this.dataTable[index.x][index.y].mask\r\n        } else {\r\n            if (this.isValidIndex(index1) && this.isValidIndex(index2) && this.isValidIndex(index3)) {\r\n                maskRet = (maskRet & this.dataTable[index2.x][index2.y].mask) == 0 || (maskRet & this.dataTable[index3.x][index3.y].mask) == 0 ? 0 : 1\r\n            }else{\r\n                maskRet = 0\r\n            }\r\n        }\r\n\r\n\r\n        return maskRet != 0\r\n    }\r\n\r\n    //初始化过程中检查改坐标点不该出现的元素（如果出现会引起三个连续的同色）\r\n    private getExclude(row: number, col: number): string[] {\r\n        let arr: string[] = []\r\n        if (row > 1) {\r\n            //if (this.dataTable[row - 1][col].type == this.dataTable[row - 2][col].type) {\r\n            if (this.isSameType(cc.v2(row - 1, col), cc.v2(row - 2, col))) {\r\n                arr.push(this.dataTable[row - 1][col].type)\r\n                arr.push(this.dataTable[row - 2][col].type)\r\n                if ((this.dataTable[row - 1][col].mask & GameItem.ItemType.ItemRainbow.mask) > 0) { //如果其中的元素和百搭元素可消除则把百搭元素添加到排除列表中\r\n                    arr.push(GameItem.ItemType.ItemRainbow.type)\r\n\r\n                    //如果两个元素都为百搭元素，则把普通元素都加到排除列表中\r\n                    if ((this.dataTable[row - 2][col].type == GameItem.ItemType.ItemRainbow.type) &&\r\n                        (this.dataTable[row - 1][col].type == GameItem.ItemType.ItemRainbow.type)) {\r\n                        arr.push(GameItem.ItemType.Item1.type, GameItem.ItemType.Item2.type, GameItem.ItemType.Item3.type, GameItem.ItemType.Item4.type)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (col > 1) {\r\n            //if (this.dataTable[row][col - 1].type == this.dataTable[row][col - 2].type) {\r\n            if (this.isSameType(cc.v2(row, col - 1), cc.v2(row, col - 2))) {\r\n                arr.push(this.dataTable[row][col - 1].type)\r\n                arr.push(this.dataTable[row][col - 2].type)\r\n                if ((this.dataTable[row][col - 2].mask & GameItem.ItemType.ItemRainbow.mask) > 0) { //如果其中的元素和百搭元素可消除则把百搭元素添加到排除列表中\r\n                    arr.push(GameItem.ItemType.ItemRainbow.type)\r\n\r\n                    //如果两个元素都为百搭元素，则把普通元素都加到排除列表中\r\n                    if ((this.dataTable[row][col - 1].type == GameItem.ItemType.ItemRainbow.type) &&\r\n                        (this.dataTable[row][col - 2].type == GameItem.ItemType.ItemRainbow.type)) {\r\n                        arr.push(GameItem.ItemType.Item1.type, GameItem.ItemType.Item2.type, GameItem.ItemType.Item3.type, GameItem.ItemType.Item4.type)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this.distinct<string>(arr, (v: string) => { return v });\r\n    }\r\n\r\n    //返回ItemEnum的一个索引；exclude 要排除的项\r\n    private _generateItem(exclude: string[] = []): string {\r\n        if (exclude.indexOf(GameItem.ItemType.Undefine.type) < 0) { //排除Undefine，即保证生成结果不会是Undefine\r\n            exclude.push(GameItem.ItemType.Undefine.type)\r\n        }\r\n        exclude = this.distinct(exclude, (v) => { return v }) //去重\r\n\r\n        let arrLen = exclude.length\r\n        let keys = Object.keys(GameItem.ItemType)\r\n        let typeCount = keys.length\r\n        let v = Math.floor(Math.random() * (typeCount - arrLen)) // \r\n\r\n        let item = 0\r\n        if (arrLen > 0) {\r\n            for (let itemIndex = 0; itemIndex < typeCount; itemIndex++) {\r\n                if (exclude.indexOf(GameItem.ItemType[keys[itemIndex]].type) >= 0) {\r\n                    continue\r\n                }\r\n\r\n                if (item == v) {\r\n                    item = itemIndex\r\n                    break\r\n                } else {\r\n                    item++\r\n                }\r\n\r\n            }\r\n        } else {\r\n            item = v\r\n        }\r\n\r\n        return GameItem.ItemType[keys[item]].type\r\n    }\r\n}"]}